# Compiler-Construction-JAVACC-

options { JAVA_UNICODE_ESCAPE = true; }

PARSER_BEGIN(SLPTokeniser)
public class SLPTokeniser {
	public static void main(String args[]) {
		SLPTokeniser tokeniser;
		if (args.length == 0) {
			System.out.println("Reading from standard input . . .");
			tokeniser = new SLPTokeniser(System.in);
		} else if (args.length == 1) {
			try {
				tokeniser = new SLPTokeniser(new java.io.FileInputStream(args[0]));
			} catch (java.io.FileNotFoundException e) {
				System.err.println("File " + args[0] + " not found.");
				return;
			}
		}
		else {
			System.out.println("SLP Tokeniser: Usage is one of:");
			System.out.println(" java SLPTokeniser < inputfile");
			System.out.println("OR");
			System.out.println(" java SLPTokeniser inputfile");
			return;
		}
		for (Token t = getNextToken(); t.kind!=EOF; t = getNextToken()) {
			// Print out the actual text for the constants, identifiers etc.
			if (t.kind==NUM){
				System.out.print("Number");
				System.out.print("("+t.image+") ");
			}
			else if (t.kind==ID){
				System.out.print("Identifier");
				System.out.print("("+t.image+") ");
			}
			else
				System.out.print(t.image+" ");
		}
	}
}
PARSER_END(SLPTokeniser)

